[gcode_macro PRINT_START]
rename_existing: KM_PRINT_START
gcode:
  {% set BED = params.BED|default(0)|float %}
  {% set CHAMBER = params.CHAMBER|default(0)|float %}
  {% set PA = params.PA|default(0)|float %}
  {% set EXTRUDER = params.EXTRUDER|float %}
  {% set LAYERS = params.LAYERS|default(0)|int %}
  {% set NOZZLE_SIZE = params.NOZZLE_SIZE|default(0.4)|float %}
  {% set MESH_MIN = params.MESH_MIN|default(None) %}
  {% set MESH_MAX = params.MESH_MAX|default(None) %}
  {% set km = printer["gcode_macro _km_globals"] %}
  {% set clean_temp = (EXTRUDER * 0.82)|round(0,'ceil')|int %}
  {% set bed_overshoot = BED + 2 %}
  
  # {% set km_scaled_extruder = (km.start_extruder_preheat_scale * EXTRUDER)|round(0,'ceil')|int %}

  # {% if km_scaled_extruder > (EXTRUDER - 20) %}
  #   {% set km_scaled_extruder = EXTRUDER - 20 %}
  # {% endif %}
  
  {% set km_scaled_extruder = 150 %}

  {% if clean_temp <= km_scaled_extruder %}
    {% set clean_temp = km_scaled_extruder + 2 %}
  {% endif %}

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ bed_overshoot }

  SAVE_GCODE_STATE NAME=CUSTOM_PRINT_START_STATE
  G90
  G28

  {% if CHAMBER > 0 and BED > 0 %}
    M191 CHAMBER={ CHAMBER } BED={ bed_overshoot }
  {% else %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ bed_overshoot }
    G0 Z30 F{km.travel_speed_z}
  {% endif %}

  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ bed_overshoot - 0.5 }

  RESPOND PREFIX="" MSG={ '"Preheating extruder to %.0fC then dropping to %.0fC and cleaning the nozzle at %.0fC"' % (EXTRUDER, km_scaled_extruder, clean_temp) }
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ EXTRUDER }
  G0 X{printer.toolhead.axis_maximum.x - 25} Y{printer.toolhead.axis_maximum.y} F{km.travel_speed_xy}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={ EXTRUDER - 0.2 }
  G4 P2000
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ km_scaled_extruder }
  M83
  G1 E5 F120
  G1 E25 F80
  G4 P500
  G1 E-3 F400

  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ clean_temp }
  CLEAN_NOZZLE

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ BED }
  TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={ BED + 0.5 }
  RESTORE_GCODE_STATE NAME=CUSTOM_PRINT_START_STATE

  G28 Z

  SET_PA V={PA}

  _PRINT_START_PHASE_INIT EXTRUDER={ EXTRUDER
    } BED={ BED
    } LAYERS={ LAYERS
    } NOZZLE_SIZE={ NOZZLE_SIZE
    }{% if MESH_MIN %} MESH_MIN={MESH_MIN}{% endif
    %}{% if MESH_MAX %} MESH_MAX={MESH_MAX}{% endif %}
  _PRINT_START_PHASE_PREHEAT
  _PRINT_START_PHASE_PROBING
  _PRINT_START_PHASE_EXTRUDER
  _PRINT_START_PHASE_PURGE

[gcode_macro M191]
rename_existing: M191.2
gcode:
  {% if "xyz" in printer.toolhead.homed_axes %}
    {% set km = printer["gcode_macro _km_globals"] %}
    {% set CHAMBER = params.S|default(0)|float %}
    {% set BED = params.BED|default(0)|float %}

    {% if CHAMBER > 0 %}
      RESPOND PREFIX="" MSG={ '"Start preheating chamber to %.0fC"' % ( CHAMBER ) }

      {% if BED > 0 %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ BED }
      {% endif %}

      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=51
      M106 S155

      SAVE_GCODE_STATE NAME=START_CHAMBER_PREHEAT

      G90
      G0 Z15 F{km.travel_speed_z}
      G0 X140 Y115 F{km.travel_speed_xy}

      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER}
      RESPOND PREFIX="" MSG={ '"Chamber preheated to %.0fC"' % ( CHAMBER ) }
      M106 S0

      RESTORE_GCODE_STATE NAME=START_CHAMBER_PREHEAT
    {% else %}
      M106 S0
    {% endif %}
  {% else %}
    { action_raise_error("Can't move to preheat position. Home first...") }
  {% endif %}

[gcode_macro M141]
rename_existing: M141.2
gcode:
  M191 {rawparams}

[gcode_macro SET_PA]
gcode:
  {% set new_pa = params.V|default(0)|float %}
  
  {% if new_pa <= 0 %}
    {% set new_pa = printer.configfile.settings.extruder.pressure_advance|default(0) %}
  {% endif %}

  SET_PRESSURE_ADVANCE ADVANCE={new_pa}

[gcode_macro BEFORE_LAYER_CHANGE]
variable_flash_value: 0.7
variable_timelapse_delay: 3
variable_flash_revert_delay: 1
variable_light_value_store: None
rename_existing: BEFORE_LAYER_CHANGE_BASE
gcode:
  BEFORE_LAYER_CHANGE_BASE {rawparams}

  {% if 'gcode_macro TIMELAPSE_TAKE_FRAME' in printer %}
    {% if printer['gcode_macro TIMELAPSE_TAKE_FRAME'].enable %}
      {% if 'led lights' in printer %}
        {% set data = printer['led lights'].color_data %}
        {% set store = [] %}
        {% for pixel in data %}
          {% set _dummy = store.append(pixel) %}
        {% endfor %}
        SET_GCODE_VARIABLE MACRO=BEFORE_LAYER_CHANGE VARIABLE=light_value_store VALUE="{store}"

        SET_LED LED=lights RED={flash_value} GREEN={flash_value} BLUE={flash_value} WHITE={flash_value} TRANSMIT=1

        UPDATE_DELAYED_GCODE ID=_DO_TIMELAPS DURATION={timelapse_delay}
      {% else %}
        TIMELAPSE_TAKE_FRAME
      {% endif %}
    {% endif %}
  {% endif %}

[delayed_gcode _DO_TIMELAPS]
initial_duration: 0
gcode:
  {% set delay = printer['gcode_macro BEFORE_LAYER_CHANGE'].flash_revert_delay %}
  TIMELAPSE_TAKE_FRAME
  UPDATE_DELAYED_GCODE ID=_FLASH_CLEANUP DURATION={delay}

[delayed_gcode _FLASH_CLEANUP]
initial_duration: 0
gcode:
  {% set light_values = printer['gcode_macro BEFORE_LAYER_CHANGE'].light_value_store %}
  {% if light_values %}
    {% set num_of_pixels = light_values|length %}
    {% for i in range(num_of_pixels) %}
      {% set px = light_values[i] %}
      {% set transmit = 0 if i < num_of_pixels - 1 else 1 %}
      SET_LED LED=lights RED={px[0]} GREEN={px[1]} BLUE={px[2]} WHITE={px[3]} INDEX={i + 1} TRANSMIT={transmit}
    {% endfor %}

    SET_GCODE_VARIABLE MACRO=BEFORE_LAYER_CHANGE VARIABLE=light_value_store VALUE={None}
  {% endif %}
