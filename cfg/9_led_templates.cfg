
[gcode_macro led_frame_timer]
description: TODO
  Usage: LED_FRAME_TIMER [TIMER=<timer name>]
    [PERIOD=<period in seconds>]
    [DEBUG=<0|1>]

variable_debug: 0
variable_timers: {}
gcode:
  # Dummy argument block for Mainsail
  {% set dummy = None if True else "
  {% set dummy = params.TIMER|default('') %}
  {% set dummy = params.PERIOD|default(0)|float %}
  {% set dummy = params.DEBUG|default(None)|int %}
  " %} # End argument block for Mainsail

  {% set DEBUG = params.DEBUG|default(-1)|int %}

  {% if DEBUG == 1 %}
    RESPOND PREFIX="LFT:" MSG="Enabling debug."
    SET_GCODE_VARIABLE MACRO=led_frame_timer VARIABLE=debug VALUE=1
  {% elif DEBUG == 0 %}
    RESPOND PREFIX="LFT:" MSG="Disabling debug."
    SET_GCODE_VARIABLE MACRO=led_frame_timer VARIABLE=debug VALUE=0
  {% else %}
    {% set TIMER = params.TIMER|default('') %}
  
    {% if not TIMER %}
      { action_raise_error('TIMER must be set.') }
    {% elif ('led %s' % TIMER) not in printer %}
      { action_raise_error('[led %s] not defined.' % TIMER) }
    {% endif %}
  
    {% set PERIOD = params.PERIOD|default(0)|float %}
  
    {% if PERIOD %}
      {% set init_timer = 0 if TIMER in timers and timers[TIMER] > 0 else 1 %}
      {% set msg = '' %}
  
      {% if PERIOD == -1 %}
        {% set dummy = timers.__setitem__(TIMER, 0) %}
        SET_GCODE_VARIABLE MACRO=led_frame_timer VARIABLE=timers VALUE="{ timers }"
    
        {% if not init_timer %}
          SET_LED_TEMPLATE LED={ TIMER } TEMPLATE= INDEX=1
    
          {% if debug %}
            RESPOND PREFIX="LFT:" MSG="{ 'Clearing timer template for %s.' % TIMER }"
          {% endif %}
        {% endif %}
    
        {% set msg = 'Timer %s disabled.' % TIMER %}
      {% elif PERIOD < 1 or PERIOD > 10 %}
        { action_raise_error('PERIOD must be between 1 and 10 seconds or -1 to disable the timer.') }
      {% else %}
        {% set dummy = timers.__setitem__(TIMER, PERIOD) %}
        SET_GCODE_VARIABLE MACRO=led_frame_timer VARIABLE=timers VALUE="{ timers }"
  
        {% set msg = '%s period set to %.1fs.' % (TIMER, PERIOD) %}
      {% endif %}
    
      {% if init_timer %}
        SET_LED_TEMPLATE LED={ TIMER } TEMPLATE=_led_frame_timer_template param_led="'{ TIMER }'" INDEX=1
    
        {% if debug %}
          RESPOND PREFIX="LFT:" MSG="{ 'Assigning timer template for %s.' % TIMER }"
        {% endif %}
      {% endif %}
    
      {% if debug and msg %}
        RESPOND PREFIX="LFT:" MSG="{ msg }"
      {% endif %}
    {% else %}
      {% if TIMER in timers %}
        {% set current = timers[TIMER] %}
        RESPOND PREFIX="LFT:" MSG="{ '%s period: %.1fs' % (TIMER, 'stopped' if current == 0 else current) }"
      {% else %}
        RESPOND PREFIX="LFT:" MSG="{ 'Time %s not initialized.' % TIMER }"
      {% endif %}
    {% endif %}
  {% endif %}

[display_template _led_frame_timer_template]
param_led: ''
text:
  {% set mod = printer.system_stats.cputime % 1 %}
  {% set flip = printer['led %s' % param_led].color_data[0][0]|default(0) %}
  {% set last = printer['led %s' % param_led].color_data[0][3]|default(0) %}
  {% set period = printer['gcode_macro led_frame_timer'].timers[param_led]|default(0) / 10 %}

  {% if last == 0 %}
    {% set last = mod %}
  {% endif %}

  {% if last > mod %}
    {% set diff = (1 - last) + mod %}
  {% else %}
    {% set diff = mod - last %}
  {% endif %}

  {% set flip = 0 if flip else 1 %}
  {% set half_period = period / 2 %}
  {% set half_period = 0 if diff < half_period else 1 %}
  {% set flash = 0 %}

  {% if period == 0 or diff < period %}
    {% set last = last if period else 0 %}
  {% else %}
    {% set flash = 1 %}
    {% set last = 0 %}
  {% endif %}

  { flip }, { half_period }, { flash }, { last }

[led _frame_timer_1]
red_pin: PB15


[display_template sb_status_template]
text:
  {% set do_flash = printer['neopixel _frame_timer_1'].color_data[0][0] %}

  {% if not printer['gcode_macro enable_timeout'].enabled and do_flash %}
    0.8, 0.8, 0.8, 0.8
  {% elif printer['gcode_macro PRINT_START'].fast_start %}
    0.5, 0, 0.73, 0
  {% else %}
    {% set settings = printer.configfile.settings['neopixel sb_leds'] %}
    {settings.initial_red}, {settings.initial_green}, {settings.initial_blue}, {settings.initial_white}
  {% endif %}

[display_template display_led_template]
text:
  {% if printer['gcode_macro PRINT_START'].fast_start %}
    0.5, 0, 0.73, 0
  {% else %}
    {% set settings = printer.configfile.settings['neopixel mini12864'] %}
    {settings.initial_red}, {settings.initial_green}, {settings.initial_blue}, {settings.initial_white}
  {% endif %}

[display_template display_knob_template]
text:
  {% set do_flash = printer['led _frame_timer_1'].color_data[0][2] %}

  {% if not printer['gcode_macro enable_timeout'].enabled and do_flash %}
    0.8, 0.8, 0.8, 0.8
  {% else %}
    0.1, 0.1, 0.1, 0.1
  {% endif %}


[delayed_gcode _set_display_templates]
initial_duration: .5
gcode:
  LED_FRAME_TIMER TIMER=_frame_timer_1 PERIOD=2
  SET_LED_TEMPLATE LED=sb_leds TEMPLATE=sb_status_template INDEX=1
  SET_LED_TEMPLATE LED=mini12864 TEMPLATE=display_led_template INDEX=1
  SET_LED_TEMPLATE LED=mini12864 TEMPLATE=display_knob_template INDEX=2
  SET_LED_TEMPLATE LED=mini12864 TEMPLATE=display_knob_template INDEX=3
